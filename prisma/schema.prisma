generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id               Int                @id @default(autoincrement())
  host_id          Int
  name             String             @db.VarChar(50)
  item_count       Int                @default(0)
  item_min_price   Int                @default(0)
  item_max_price   Int                @default(0)
  host             host               @relation(fields: [host_id], references: [id], map: "category_fk")
  category_image   category_image?
  sub_cat_discount sub_cat_discount[]
  sub_category     sub_category[]

  @@unique([host_id, name], map: "category_host_id_name_un")
}

model category_image {
  cat_id   Int      @id
  height   Int
  width    Int
  url      String   @unique(map: "category_image_url_un") @db.VarChar(200)
  category category @relation(fields: [cat_id], references: [id], map: "category_image_fk")
}

model discount {
  id                       Int                        @id @default(autoincrement())
  code                     String?                    @unique(map: "discount_code_un") @db.VarChar(20)
  count                    Int
  percentage               Int
  max_amount               BigInt
  expiry_date              DateTime                   @db.DateTime(0)
  product_discount         product_discount[]
  product_discount_history product_discount_history[]
}

model faq {
  id       Int    @id @default(autoincrement())
  question String @unique(map: "faq_un") @db.VarChar(200)
  answer   String @db.VarChar(200)
}

model feature {
  id                       Int             @id @default(autoincrement())
  title                    String          @unique(map: "feature_title_un") @db.VarChar(50)
  description              String          @db.VarChar(200)
  version                  Int
  version_featureToversion version         @relation(fields: [version], references: [id], onDelete: Cascade, map: "feature_fk")
  level_feature            level_feature[]

  @@index([version], map: "feature_fk")
}

model host {
  id           Int          @id @default(autoincrement())
  owner_id     Int
  name         String       @unique(map: "host_name_un") @db.VarChar(50)
  phone        String       @unique(map: "host_phone_un") @db.VarChar(13)
  address      String?      @db.VarChar(200)
  description  String?      @db.VarChar(200)
  opening_time DateTime     @db.Time(0)
  closing_time DateTime     @db.Time(0)
  licenced     Boolean      @default(true)
  deleted      Boolean      @default(false)
  customer     customer     @relation(fields: [owner_id], references: [id], map: "host_fk")
  category     category[]
  host_image   host_image?
  host_table   host_table[]
  order        order[]
  personnel    personnel[]
  rate         rate[]
  role         role[]

  @@index([owner_id], map: "host_fk")
}

model host_image {
  host_id Int    @id
  height  Int
  width   Int
  url     String @unique(map: "host_image_url_un") @db.VarChar(200)
  host    host   @relation(fields: [host_id], references: [id], map: "host_image_fk")
}

model image_type {
  id          Int    @id @default(autoincrement())
  type        String @unique(map: "image_type_type_un") @db.VarChar(50)
  description String @db.VarChar(200)
  width       Int
  height      Int
}

model ingredient {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique(map: "ingredient_name_un") @db.VarChar(50)
  product_ingredient product_ingredient[]
}

model level_feature {
  id             Int            @id @default(autoincrement())
  level_id       Int
  feature_id     Int
  feature        feature        @relation(fields: [feature_id], references: [id], onDelete: Cascade, map: "level_feature_fk")
  purchase_level purchase_level @relation(fields: [level_id], references: [id], onDelete: Cascade, map: "level_feature_fk_1")

  @@unique([level_id, feature_id], map: "level_feature_lev_feat_un")
  @@index([feature_id], map: "level_feature_fk")
}

model order {
  id                       Int                       @id @default(autoincrement())
  host_id                  Int
  payment_id               Int
  total_price              BigInt
  total_discount           BigInt
  time                     DateTime                  @db.DateTime(0)
  description              String?                   @db.VarChar(100)
  customer_id              Int
  total_tip                BigInt
  pay_date                 DateTime?                 @db.DateTime(0)
  customer                 customer                  @relation(fields: [customer_id], references: [id], map: "order_FK_2")
  host                     host                      @relation(fields: [host_id], references: [id], map: "order_fk")
  payment                  payment                   @relation(fields: [payment_id], references: [id], map: "order_FK_1")
  order_item               order_item[]
  product_discount_history product_discount_history?
  sub_cat_discount_history sub_cat_discount_history?
  tip                      tip[]

  @@index([host_id], map: "order_fk")
  @@index([payment_id], map: "order_fk_1")
  @@index([customer_id], map: "order_FK_2")
}

model order_item {
  id         Int     @id @default(autoincrement())
  product_id Int
  order_id   Int
  count      Int
  order      order   @relation(fields: [order_id], references: [id], map: "order_item_fk")
  product    product @relation(fields: [product_id], references: [id], map: "order_item_fk_1")

  @@unique([product_id, order_id], map: "order_item_product_order_un")
  @@index([order_id], map: "order_item_fk")
}

model owner {
  customer_id   Int        @id
  username      String     @unique(map: "owner_username_un") @db.VarChar(50)
  password      String     @unique(map: "owner_password_un") @db.VarChar(200)
  owner_role_id Int
  creation_date DateTime   @db.DateTime(0)
  customer      customer   @relation(fields: [customer_id], references: [id], map: "owner_fk")
  owner_role    owner_role @relation(fields: [owner_role_id], references: [id], map: "owner_fk_1")

  @@index([owner_role_id], map: "owner_fk_1")
}

model owner_permission {
  id                    Int                     @id @default(autoincrement())
  title                 String                  @unique(map: "owner_permission_title_un") @db.VarChar(50)
  title_fa              String                  @unique(map: "owner_permission_title_fa_un") @db.VarChar(50)
  description           String                  @db.VarChar(200)
  owner_role_permission owner_role_permission[]
}

model owner_role {
  id                    Int                     @id @default(autoincrement())
  title                 String                  @unique(map: "owner_role_title_un") @db.VarChar(50)
  title_fa              String                  @unique(map: "owner_role_title_fa_un") @db.VarChar(50)
  owner                 owner[]
  owner_role_permission owner_role_permission[]
}

model owner_role_permission {
  id                  Int              @id @default(autoincrement())
  owner_role_id       Int
  owner_permission_id Int
  owner_permission    owner_permission @relation(fields: [owner_permission_id], references: [id], onDelete: Cascade, map: "owner_role_permission_fk_1")
  owner_role          owner_role       @relation(fields: [owner_role_id], references: [id], onDelete: Cascade, map: "owner_role_permission_fk")

  @@unique([owner_role_id, owner_permission_id], map: "owner_role_permission_role_perm_un")
  @@index([owner_permission_id], map: "owner_role_permission_fk_1")
}

model payment {
  id       Int        @id @default(autoincrement())
  price    BigInt
  success  Boolean?
  order    order[]
  purchase purchase[]
}

model permission {
  id              Int               @id @default(autoincrement())
  title           String            @unique(map: "permission_title_un") @db.VarChar(50)
  title_fa        String            @unique(map: "permission_title_fa_un") @db.VarChar(50)
  description     String            @db.VarChar(200)
  role_permission role_permission[]
}

model personnel {
  id            Int             @id @default(autoincrement())
  customer_id   Int
  host_id       Int
  role_id       Int
  customer      customer        @relation(fields: [customer_id], references: [id], map: "personnel_FK")
  host          host            @relation(fields: [host_id], references: [id], map: "personnel_FK_1")
  role          role            @relation(fields: [role_id], references: [id], map: "personnel_FK_2")
  personnel_tip personnel_tip[]

  @@unique([customer_id, host_id, role_id], map: "personnel_cust_host_role_UN")
  @@index([host_id], map: "personnel_FK_1")
  @@index([role_id], map: "personnel_FK_2")
}

model personnel_tip {
  id           Int       @id @default(autoincrement())
  personnel_id Int
  tip_id       Int
  paid         Boolean   @default(false)
  personnel    personnel @relation(fields: [personnel_id], references: [id], onDelete: Cascade, map: "personnel_tip_fk_1")
  tip          tip       @relation(fields: [tip_id], references: [id], onDelete: Cascade, map: "personnel_tip_fk")

  @@unique([personnel_id, tip_id], map: "personnel_tip_pers_tip_un")
  @@index([tip_id], map: "personnel_tip_fk")
}

model product {
  id                 Int                  @id @default(autoincrement())
  sub_cat_id         Int
  name               String               @db.VarChar(50)
  price              BigInt
  enabled            Boolean              @default(true)
  deleted            Boolean              @default(false)
  sub_category       sub_category         @relation(fields: [sub_cat_id], references: [id], map: "product_fk")
  order_item         order_item[]
  product_discount   product_discount[]
  product_image      product_image[]
  product_ingredient product_ingredient[]
  product_star       product_star[]

  @@unique([sub_cat_id, name], map: "product_sub_cat_name_un")
}

model product_discount {
  id          Int      @id @default(autoincrement())
  product_id  Int
  discount_id Int
  discount    discount @relation(fields: [discount_id], references: [id], map: "product_discount_fk")
  product     product  @relation(fields: [product_id], references: [id], map: "product_discount_fk_1")

  @@unique([product_id, discount_id], map: "product_discount_prod_disc_un")
  @@index([discount_id], map: "product_discount_fk")
}

model product_discount_history {
  order_id        Int      @id
  discount_id     Int
  total_amount    BigInt
  discount_amount BigInt
  used_at         DateTime @db.DateTime(0)
  discount        discount @relation(fields: [discount_id], references: [id], map: "product_discount_history_fk_1")
  order           order    @relation(fields: [order_id], references: [id], map: "product_discount_history_fk")

  @@index([discount_id], map: "product_discount_history_fk_1")
}

model product_image {
  id         Int     @id @default(autoincrement())
  product_id Int
  height     Int
  width      Int
  url        String  @unique(map: "product_image_url_un") @db.VarChar(200)
  user_image Boolean
  product    product @relation(fields: [product_id], references: [id], map: "product_image_fk")

  @@index([product_id], map: "product_image_fk")
}

model product_ingredient {
  id            Int        @id @default(autoincrement())
  product_id    Int
  ingredient_id Int
  ingredient    ingredient @relation(fields: [ingredient_id], references: [id], map: "product_ingredient_fk_1")
  product       product    @relation(fields: [product_id], references: [id], map: "product_ingredient_fk")

  @@unique([product_id, ingredient_id], map: "product_ingredient_prod_ing_un")
  @@index([ingredient_id], map: "product_ingredient_fk_1")
}

model product_star {
  id          Int      @id @default(autoincrement())
  product_id  Int
  customer_id Int
  star        Int
  customer    customer @relation(fields: [customer_id], references: [id], map: "product_star_FK_1")
  product     product  @relation(fields: [product_id], references: [id], map: "product_star_FK")

  @@unique([product_id, customer_id], map: "product_star_customer_product_UN")
  @@index([customer_id], map: "product_star_fk_1")
}

model purchase {
  id                        Int                        @id @default(autoincrement())
  customer_id               Int
  purchase_plan_id          Int
  purchase_date             DateTime                   @db.DateTime(0)
  payment_id                Int
  customer                  customer                   @relation(fields: [customer_id], references: [id], map: "purchase_fk")
  payment                   payment                    @relation(fields: [payment_id], references: [id], map: "purchase_FK_2")
  purchase_plan             purchase_plan              @relation(fields: [purchase_plan_id], references: [id], map: "purchase_fk_1")
  purchase_discount_history purchase_discount_history?

  @@index([customer_id], map: "purchase_fk")
  @@index([purchase_plan_id], map: "purchase_fk_1")
  @@index([payment_id], map: "purchase_FK_2")
}

model purchase_discount {
  id                        Int                         @id @default(autoincrement())
  purchase_plan_id          Int                         @unique(map: "purchase_discount_purchase_plan_un")
  code                      String?                     @unique(map: "purchase_discount_code_un") @db.VarChar(20)
  count                     Int
  percentage                Int
  max_amount                BigInt
  expiry_date               DateTime                    @db.DateTime(0)
  purchase_plan             purchase_plan               @relation(fields: [purchase_plan_id], references: [id], map: "purchase_discount_fk")
  purchase_discount_history purchase_discount_history[]
}

model purchase_discount_history {
  purchase_id          Int               @id
  purchase_discount_id Int
  total_amount         BigInt
  discount_amount      BigInt
  used_at              DateTime          @db.DateTime(0)
  purchase_discount    purchase_discount @relation(fields: [purchase_discount_id], references: [id], map: "purchase_discount_history_fk_1")
  purchase             purchase          @relation(fields: [purchase_id], references: [id], map: "purchase_discount_history_fk")

  @@index([purchase_discount_id], map: "purchase_discount_history_fk_1")
}

model purchase_level {
  id            Int             @id @default(autoincrement())
  title         String          @unique(map: "purchase_level_title_un") @db.VarChar(50)
  price         BigInt
  level_feature level_feature[]
  purchase_plan purchase_plan[]
}

model purchase_lifetime {
  id            Int                     @id @default(autoincrement())
  title         purchase_lifetime_title @unique(map: "purchase_lifetime_title_un")
  description   String                  @db.VarChar(200)
  multiplier    Float                   @db.Float
  purchase_plan purchase_plan[]
}

model purchase_plan {
  id                   Int                @id @default(autoincrement())
  purchase_lifetime_id Int
  purchase_level_id    Int
  price                BigInt
  purchase_level       purchase_level     @relation(fields: [purchase_level_id], references: [id], onDelete: Cascade, map: "purchase_plan_fk_1")
  purchase_lifetime    purchase_lifetime  @relation(fields: [purchase_lifetime_id], references: [id], onDelete: Cascade, map: "purchase_plan_fk")
  purchase             purchase[]
  purchase_discount    purchase_discount?

  @@unique([purchase_lifetime_id, purchase_level_id], map: "purchase_plan_un")
  @@index([purchase_level_id], map: "purchase_plan_fk_1")
}

model qr_image {
  host_table_id Int        @id
  height        Int
  width         Int
  url           String     @unique(map: "qr_image_url_un") @db.VarChar(100)
  host_table    host_table @relation(fields: [host_table_id], references: [id], onDelete: Cascade, map: "qr_image_fk")
}

model rate {
  customer_id     Int
  host_id         Int
  host_point      Int
  personnel_point Int
  quality_point   Int
  description     String?  @db.VarChar(200)
  customer        customer @relation(fields: [customer_id], references: [id], map: "rate_fk_1")
  host            host     @relation(fields: [host_id], references: [id], map: "rate_fk")

  @@id([customer_id, host_id])
  @@index([host_id], map: "rate_fk")
}

model role {
  id              Int               @id @default(autoincrement())
  host_id         Int
  title           String            @db.VarChar(50)
  title_fa        String            @db.VarChar(50)
  host            host              @relation(fields: [host_id], references: [id], map: "role_fk")
  personnel       personnel[]
  role_permission role_permission[]

  @@unique([title_fa, host_id], map: "role_host_title_fa_un")
  @@unique([title, host_id], map: "role_host_title_un")
  @@index([host_id], map: "role_fk")
}

model role_permission {
  id            Int        @id @default(autoincrement())
  role_id       Int
  permission_id Int
  permission    permission @relation(fields: [permission_id], references: [id], onDelete: Cascade, map: "role_permission_fk_1")
  role          role       @relation(fields: [role_id], references: [id], onDelete: Cascade, map: "role_permission_fk")

  @@unique([role_id, permission_id], map: "role_permission_role_perm_un")
  @@index([permission_id], map: "role_permission_fk_1")
}

model sub_cat_discount {
  id                       Int                        @id @default(autoincrement())
  cat_id                   Int
  sub_cat_id               Int
  count                    Int
  percentage               Int
  max_amount               BigInt
  expiry_date              DateTime                   @db.DateTime(0)
  category                 category                   @relation(fields: [cat_id], references: [id], map: "sub_cat_discount_fk")
  sub_category             sub_category               @relation(fields: [sub_cat_id], references: [id], map: "sub_cat_discount_fk_1")
  sub_cat_discount_history sub_cat_discount_history[]

  @@unique([cat_id, sub_cat_id], map: "sub_cat_discount_cat_sub_un")
  @@index([sub_cat_id], map: "sub_cat_discount_fk_1")
}

model sub_cat_discount_history {
  order_id            Int              @id
  sub_cat_discount_id Int
  total_amount        BigInt
  discount_amount     BigInt
  used_at             DateTime         @db.DateTime(0)
  order               order            @relation(fields: [order_id], references: [id], map: "sub_cat_discount_history_fk")
  sub_cat_discount    sub_cat_discount @relation(fields: [sub_cat_discount_id], references: [id], map: "sub_cat_discount_history_fk_1")

  @@index([sub_cat_discount_id], map: "sub_cat_discount_history_fk_1")
}

model sub_category {
  id               Int                @id @default(autoincrement())
  cat_id           Int
  name             String             @db.VarChar(50)
  category         category           @relation(fields: [cat_id], references: [id], map: "sub_category_fk")
  product          product[]
  sub_cat_discount sub_cat_discount[]

  @@unique([cat_id, name], map: "sub_category_name_cat_un")
}

model tip {
  id            Int             @id @default(autoincrement())
  order_id      Int
  customer_id   Int
  amount        BigInt
  count         Int
  tip_date      DateTime        @db.DateTime(0)
  customer      customer        @relation(fields: [customer_id], references: [id], map: "tip_fk")
  order         order           @relation(fields: [order_id], references: [id], map: "tip_FK_1")
  personnel_tip personnel_tip[]

  @@index([customer_id], map: "tip_fk")
  @@index([order_id], map: "tip_fk_1")
}

model version {
  id             Int       @id @default(autoincrement())
  version_number Float     @unique(map: "version_number_un") @db.Float
  creation_date  DateTime  @db.DateTime(0)
  feature        feature[]
}

model customer {
  id                                                                  Int                     @id @default(autoincrement())
  name                                                                String                  @default("کاربر") @db.VarChar(50)
  last                                                                String                  @default("گرامی") @db.VarChar(50)
  phone                                                               String                  @unique(map: "customer_phone_un") @db.VarChar(13)
  creation_date                                                       DateTime                @db.DateTime(0)
  gender                                                              customer_gender?
  age                                                                 Int?
  credit                                                              BigInt                  @default(0)
  introduction_id                                                     String                  @unique(map: "customer_introduction_id_idx") @db.VarChar(50)
  deleted                                                             Boolean                 @default(false)
  customer_feature                                                    customer_feature[]
  customer_image                                                      customer_image?
  customer_introduction_customerTocustomer_introduction_customer_id   customer_introduction[] @relation("customerTocustomer_introduction_customer_id")
  customer_introduction_customerTocustomer_introduction_introducer_id customer_introduction[] @relation("customerTocustomer_introduction_introducer_id")
  host                                                                host[]
  order                                                               order[]
  owner                                                               owner?
  personnel                                                           personnel[]
  product_star                                                        product_star[]
  purchase                                                            purchase[]
  rate                                                                rate[]
  tip                                                                 tip[]
}

model customer_feature {
  id          Int      @id @default(autoincrement())
  customer_id Int
  title       String   @db.VarChar(50)
  description String   @db.VarChar(200)
  accepted    Boolean  @default(false)
  paid        Boolean  @default(false)
  customer    customer @relation(fields: [customer_id], references: [id], map: "customer_feature_FK")

  @@index([customer_id], map: "customer_feature_fk")
}

model customer_image {
  customer_id Int      @id
  height      Int?
  width       Int?
  url         String   @unique(map: "customer_image_url_UN") @db.VarChar(200)
  customer    customer @relation(fields: [customer_id], references: [id], map: "customer_image_FK")
}

model customer_introduction {
  id                                                     Int      @id @default(autoincrement())
  customer_id                                            Int
  introducer_id                                          Int
  paid                                                   Boolean  @default(false)
  customer_customerTocustomer_introduction_customer_id   customer @relation("customerTocustomer_introduction_customer_id", fields: [customer_id], references: [id], map: "customer_introduction_FK")
  customer_customerTocustomer_introduction_introducer_id customer @relation("customerTocustomer_introduction_introducer_id", fields: [introducer_id], references: [id], map: "customer_introduction_FK_1")

  @@unique([customer_id, introducer_id], map: "customer_introduction_cust_intro_UN")
  @@index([introducer_id], map: "customer_introduction_FK_1")
}

model host_table {
  id           Int       @id @default(autoincrement())
  host_id      Int
  capacity     Int
  table_number Int
  host         host      @relation(fields: [host_id], references: [id], map: "table_fk")
  qr_image     qr_image?

  @@unique([host_id, table_number], map: "host_table_host_table_number_UN")
  @@index([host_id], map: "table_fk")
}

enum purchase_lifetime_title {
  MONTHLY
  SEASONAL
  SEMIANNUAL
  ANNUAL
  PER_SALE
}

enum customer_gender {
  male
  female
  other
}
